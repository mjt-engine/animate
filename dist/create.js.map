{"version":3,"file":"create.js","sourceRoot":"","sources":["../src/create.ts"],"names":[],"mappings":"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","sourcesContent":["import type { AnimateState } from \"./type/AnimateState\";\nimport type { AnimationLoopConfig } from \"./type/AnimationLoopConfig\";\nimport type { Tick } from \"./type/Tick\";\nimport type { Ticker } from \"./type/Ticker\";\n\nexport const create = ({\n  ticksPerSecond = 60,\n  ticker: tickable = [],\n  running = true,\n  signal,\n  errorHandler = (error) => {\n    throw error;\n  },\n  request = requestAnimationFrame,\n}: AnimationLoopConfig): AnimateState => {\n  // convert parameters\n  const rateLimit = ticksPerSecond !== undefined;\n  ticksPerSecond = rateLimit ? ticksPerSecond : 60; // TODO SHOULD CALC\n  const tickStepMs = (1 / ticksPerSecond) * 1000;\n  const tickers: Ticker[] = Array.isArray(tickable) ? tickable : [tickable];\n  const abortController = new AbortController();\n\n  const state: AnimateState = {\n    lastTickMs: Date.now(),\n    nextTickMs: Date.now(),\n    tickCount: 0,\n    frameCount: 0,\n    costMs: 0,\n    rateLimit,\n    tickStepMs,\n    tickers,\n    running,\n    abort: false,\n    deltaMs: 0,\n    lastDeltaMs: 0,\n    abortController,\n    destroy: () => {\n      state.abort = true;\n    },\n  };\n\n  // animation loop\n  const animate = async () => {\n    const curTimeMs = Date.now();\n    state.costMs = 0;\n    if (!rateLimit || curTimeMs >= state.nextTickMs) {\n      state.lastDeltaMs = state.deltaMs;\n      state.deltaMs = curTimeMs - state.lastTickMs;\n      state.lastTickMs = curTimeMs;\n      // state.nextTickMs += tickStepMs;\n      state.nextTickMs = curTimeMs + tickStepMs;\n      const tick: Tick = {\n        ...state,\n      };\n\n      try {\n        if (state.running) {\n          for (let i = 0; i < tickers.length; i++) {\n            const tickable = tickers[i];\n            await tickable(tick);\n          }\n          state.tickCount++;\n        }\n      } catch (error) {\n        errorHandler(error);\n      }\n      state.costMs = Date.now() - curTimeMs;\n    }\n\n    // adjust the next tick cost\n    state.nextTickMs = state.nextTickMs - state.costMs;\n    state.frameCount++;\n    if (\n      state.abort ||\n      state.abortController.signal.aborted ||\n      signal?.aborted\n    ) {\n      return;\n    }\n    request(animate);\n  };\n\n  animate();\n\n  return state;\n};\n"]}